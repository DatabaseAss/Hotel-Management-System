USE MASTER;
GO
DROP DATABASE db_ass;
GO
CREATE DATABASE db_ass;
GO
USE db_ass;
GO

CREATE TABLE BRANCH (
    ID INT IDENTITY(1,1) NOT NULL,
    BRANCHID AS 'CN' + CAST(ID AS VARCHAR(3)) PERSISTED UNIQUE NOT NULL,
    PROVINCE NVARCHAR(255) DEFAULT '' NOT NULL,
    ADDR VARCHAR(255) DEFAULT '' UNIQUE NOT NULL,
    PHONE VARCHAR(255) DEFAULT '' UNIQUE NOT NULL,						
	MAIL VARCHAR(255) DEFAULT '' UNIQUE NOT NULL,							
	PRIMARY KEY(BRANCHID)
);

CREATE TABLE BRANCH_IMG (
    BRANCHID VARCHAR(5) NOT NULL,										
	IMG VARCHAR(255) DEFAULT '' NOT NULL ,										-- LINK DAN DEN HINH ANH
	PRIMARY KEY(BRANCHID, IMG),				
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID) ON DELETE CASCADE
);

CREATE TABLE ZONES (
	BRANCHID VARCHAR(5) NOT NULL,										-- MA CHI NHANH (BID)
	ZNAME NVARCHAR(255) NOT NULL,									-- TEN KHU (NAME)
	PRIMARY KEY(BRANCHID, ZNAME),				
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID)  ON DELETE CASCADE
);

CREATE TABLE ROOMTYPE (
	TYPEID INT IDENTITY(1,1) NOT NULL,									-- MA LOAI PHONG
	TYPENAME NVARCHAR(255) NOT NULL,											-- TEN LOAI PHONG
	AREA FLOAT CHECK (AREA > 0) NOT NULL,									-- DIEN TICH
	CAPACITY INT CHECK(CAPACITY > 0 AND CAPACITY < 11) NOT NULL,	--SO NGUOI
	DESCRIPTIONS NVARCHAR(255),											-- THONG TIN THEM
	PRIMARY KEY(TYPEID)
);

CREATE TABLE BEDINFO (
	TYPEID INT NOT NULL,												-- MA LOAI PHONG
	SIZE FLOAT CHECK (SIZE > 0) NOT NULL,							-- KICH THUOC
	QUANTITY INT DEFAULT 1 NOT NULL CHECK(QUANTITY > 0 AND QUANTITY < 11) , -- SO NNGUOI	
	PRIMARY KEY(TYPEID, SIZE),
	FOREIGN KEY(TYPEID) REFERENCES ROOMTYPE(TYPEID)  ON DELETE CASCADE
);

CREATE TABLE BRANCH_HAVE_ROOMTYPE (
	BRANCHID VARCHAR(5) NOT NULL,										-- MA CHI NHANH
	TYPEID INT NOT NULL,												-- MA LOAI PHONG
	PRICE INT CHECK (PRICE > 0) NOT NULL,								-- GIA TIEN
	PRIMARY KEY(BRANCHID, TYPEID),
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID)  ON DELETE CASCADE,
	FOREIGN KEY(TYPEID) REFERENCES ROOMTYPE(TYPEID)  ON DELETE CASCADE
);


-- 7. ROOM --
CREATE TABLE ROOM(
	BRANCHID VARCHAR(5) NOT NULL,										-- MA CHI NHANH
	ROOMID VARCHAR(3) NOT NULL,										-- SO PHONG
	TYPEID INT NOT NULL,												-- MA LOAI PHONG
	ZNAME NVARCHAR(255) NOT NULL,									-- TEN PHONG
	FOREIGN KEY(TYPEID) REFERENCES ROOMTYPE(TYPEID) ON UPDATE CASCADE,
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID) ON UPDATE CASCADE, 
	FOREIGN KEY(BRANCHID, ZNAME) REFERENCES ZONES(BRANCHID, ZNAME) ON UPDATE NO ACTION ON DELETE CASCADE,
    PRIMARY KEY(BRANCHID, ROOMID)
);

-- 8. SUPPLY TYPE --
CREATE TABLE SUPPLY_TYPE  (
	ID INT IDENTITY(1,1) NOT NULL,
	SUPPLYID AS 'VT' + CAST(ID AS VARCHAR(4)) PERSISTED UNIQUE NOT NULL,
	SNAME NVARCHAR(255) NOT NULL,
	PRIMARY KEY(SUPPLYID)		
);

-- 9. SUPPLY TYPE IN ROOM --
CREATE TABLE SUPPLY_IN_ROOM (
	SUPPLYID VARCHAR(6) NOT NULL,													-- MA LOAI VAT TU
	TYPEID INT NOT NULL,																-- MA LOAI PHONG
	NUM_SUPPLY INT DEFAULT 1 NOT NULL CHECK (NUM_SUPPLY > 0 AND NUM_SUPPLY < 21)  , 	-- SO LUONG
	PRIMARY KEY(SUPPLYID, TYPEID),
	FOREIGN KEY(TYPEID) REFERENCES ROOMTYPE(TYPEID) ON DELETE CASCADE,
	FOREIGN KEY(SUPPLYID) REFERENCES SUPPLY_TYPE(SUPPLYID) ON DELETE CASCADE
);

-- 10. SUPPLY --
CREATE TABLE SUPPLY 
(
	BRANCHID VARCHAR(5) NOT NULL,										-- MA CHI NHANH
	SUPPLYID VARCHAR(6) NOT NULL,										-- MA LOAI VAT TU
	ID INT IDENTITY(1,1) NOT NULL,									-- STT VAT TU
	ROOMID VARCHAR(3) NOT NULL,												-- SO PHONG
	STATUSS NVARCHAR(255),											-- TINH TRANG
	PRIMARY KEY(BRANCHID, SUPPLYID, ID),
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID) ON DELETE CASCADE,
	FOREIGN KEY(SUPPLYID) REFERENCES SUPPLY_TYPE(SUPPLYID)  ON DELETE CASCADE,
	FOREIGN KEY(BRANCHID, ROOMID) REFERENCES ROOM(BRANCHID, ROOMID) ON UPDATE CASCADE
);

-- 11. SUPPLIER --
CREATE TABLE SUPPLIER (
	ID INT IDENTITY(1,1) NOT NULL,												
	SUPPLIER_ID AS 'NCC' + CAST(ID AS VARCHAR(4)) PERSISTED UNIQUE NOT NULL,	-- MA NHA CUNG CAP
	SUPPLIER_NAME NVARCHAR(255) NOT NULL,										-- TEN NHA CUNG CAP
	EMAIL VARCHAR(255),															-- EMAIL
	ADDRES NVARCHAR(255) NOT NULL,												-- DIA CHI
	PRIMARY KEY(SUPPLIER_ID),
);

-- 12. PROVIDE SUPPLY --
CREATE TABLE PROVIDE_SUPPLY(
	SUPPLIER_ID VARCHAR(7) NOT NULL,											-- MA NHA CUNG CAP
	BRANCHID VARCHAR(5) NOT NULL,													-- MA CHI NHANH
	SUPPLYID VARCHAR(6) NOT NULL,												-- MA LOAI VAT TU
	PRIMARY KEY(SUPPLYID,BRANCHID),
	FOREIGN KEY(SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID) ON DELETE CASCADE,
	FOREIGN KEY(SUPPLYID) REFERENCES SUPPLY_TYPE(SUPPLYID) ON DELETE CASCADE
);

-- 13. CUSTOMER --
CREATE TABLE CUSTOMER(
	ID INT IDENTITY(1,1) NOT NULL,												-- 6 KI TU
	CUSTOMERID AS 'KH' + CAST(ID AS VARCHAR(6)) PERSISTED UNIQUE NOT NULL,				-- MA KHACH HANG	
	CCCD VARCHAR(12) UNIQUE NOT NULL,			 	 							-- CAN CUOC CONG DAN	
	FULLNAME NVARCHAR(255) NOT NULL,											-- HO TEN
	PHONENUMBER VARCHAR(12) UNIQUE NOT NULL,									-- SDT
	EMAIL VARCHAR(255) UNIQUE,													-- EMAIL
	USERNAME VARCHAR(255) UNIQUE NOT NULL,										-- TEN DANG NHAP
	POINTS INT DEFAULT 0 CHECK (POINTS >= 0) NOT NULL ,							-- DIEM
	CTYPE INT DEFAULT 1 CHECK (CTYPE > 0) NOT NULL , 							-- LOAI
	PRIMARY KEY(CUSTOMERID) 
);

-- 14. PACKAGE -- 
CREATE TABLE PACKAGE(
	PACKAGE_NAME NVARCHAR(255) UNIQUE NOT NULL,									-- TEN GOI
	NUM_DAYS INT NOT NULL CHECK (NUM_DAYS > 0 AND NUM_DAYS < 101),				-- SO NGAY
	CAPACITY INT NOT NULL CHECK (CAPACITY > 0 AND CAPACITY < 11),			-- SO NGUOI
	COST INT NOT NULL CHECK(COST > 0),											-- GIA TIEN
	PRIMARY KEY(PACKAGE_NAME)
);

-- 15. SERVICE BILL --
CREATE TABLE BILL_SERVICE(
	CUSTOMERID VARCHAR(8) NOT NULL,
	PACKAGE_NAME NVARCHAR(255) NOT NULL,
	DATE_BUY DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL ,
	START_DAY DATETIME,
	CHECK (START_DAY > DATE_BUY),
	TOTAL_COST INT DEFAULT 0 NOT NULL CHECK(TOTAL_COST > 0) ,
	FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(CUSTOMERID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(PACKAGE_NAME) REFERENCES PACKAGE(PACKAGE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(CUSTOMERID, PACKAGE_NAME, START_DAY)
);

-- 16. RECEIPT --
CREATE TABLE RECEIPT (
    ID INT IDENTITY(1,1) NOT NULL,
    BOOKINGID AS 'DP' + CAST(ID AS VARCHAR(14)) PERSISTED UNIQUE NOT NULL,
    BOOKING_TIME DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CHECKIN DATETIME NOT NULL,
    CHECKOUT DATETIME NOT NULL,
    STAT INT NOT NULL CHECK (STAT>-1 AND STAT<4),
    TOTAL_COST INT DEFAULT 0 NOT NULL CHECK(TOTAL_COST > 0),
    CUSTOMERID VARCHAR(8) NOT NULL,
    PACKAGE_NAME NVARCHAR(255) NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(CUSTOMERID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(PACKAGE_NAME) REFERENCES PACKAGE(PACKAGE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(BOOKINGID)
);

-- 17. HIRING ROOM --
CREATE TABLE HIRING_ROOM (
    BOOKINGID VARCHAR(16) NOT NULL,
    BRANCHID VARCHAR(5) NOT NULL,
    ROOMID VARCHAR(3) NOT NULL,
    FOREIGN KEY(BOOKINGID) REFERENCES RECEIPT(BOOKINGID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(BRANCHID,ROOMID) REFERENCES ROOM(BRANCHID,ROOMID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(BOOKINGID,BRANCHID,ROOMID)
);

-- 18. BILL --
CREATE TABLE BILL (
    ID INT IDENTITY(1,1) NOT NULL,
    BILLID AS 'HD' + CAST(ID AS VARCHAR(14)) PERSISTED UNIQUE NOT NULL,
    -- SELECT TIME_FORMAT(%h %i),
    CHECKIN TIME NOT NULL,
    CHECKOUT TIME NOT NULL,
    BOOKINGID VARCHAR(16) NOT NULL,
    FOREIGN KEY(BOOKINGID) REFERENCES RECEIPT(BOOKINGID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (BILLID)
);

-- 19. Company --
CREATE TABLE COMPANY (
    ID INT IDENTITY(1,1) NOT NULL,
    COMPANYID AS 'DN' + CAST(ID AS VARCHAR(4)) PERSISTED UNIQUE NOT NULL,
    COMPANY_NAME VARCHAR(255) DEFAULT '' NOT NULL,
    PRIMARY KEY(COMPANYID)
);

-- 20. SERVICE --
CREATE TABLE SERVICES (
    ID INT IDENTITY(1,1) NOT NULL,
    SERVICEID AS 'DV' + CAST (ID AS VARCHAR(6)) PERSISTED UNIQUE NOT NULL,
    SERVICE_TYPE VARCHAR(1) NOT NULL,
    CAPACITY INT NOT NULL,
    STYLE VARCHAR(255) NOT NULL,
    COMPANYID VARCHAR(6) NOT NULL,
    FOREIGN KEY(COMPANYID) REFERENCES COMPANY(COMPANYID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(SERVICEID)
);

-- 21. SPA -- 
CREATE TABLE SPA 
(
	SERVICEID VARCHAR(8) NOT NULL,
	SPA_NAME NVARCHAR(255) NOT NULL UNIQUE,
	FOREIGN KEY(SERVICEID) REFERENCES  SERVICES(SERVICEID) ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY(SERVICEID, SPA_NAME)
);	

-- 22. SOUVENIR TYPE -- 
CREATE TABLE SOUVENIR
(
	SERVICEID VARCHAR(8) NOT NULL,
	SOUVENIR_NAME NVARCHAR(5) NOT NULL UNIQUE,
);

-- 23. SOUVENIR BRAND --
CREATE TABLE SOUVENIR_BRAND
(
	SERVICEID VARCHAR(8) NOT NULL,
	BRAND NVARCHAR(255) NOT NULL,
	FOREIGN KEY(SERVICEID) REFERENCES SERVICES(SERVICEID) ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY(SERVICEID, BRAND)

);

-- 24. ESTATE -- 
CREATE TABLE ESTATE
(
	BRANCHID VARCHAR(5) NOT NULL,
	ID INT DEFAULT 1 NOT NULL CHECK (ID > 0 AND ID < 51),
	HEIGHT FLOAT NOT NULL CHECK(HEIGHT > 0), 
	WIDTH FLOAT NOT NULL CHECK(WIDTH > 0),
	COST INT NOT NULL,
	INFO NVARCHAR(255), 
	SERVICEID VARCHAR(8) NOT NULL,
	LINK VARCHAR(255) NOT NULL,
	FOREIGN KEY(SERVICEID) REFERENCES SERVICES(SERVICEID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(BRANCHID) REFERENCES BRANCH(BRANCHID) ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY(BRANCHID, ID)
);

-- 25. STORE_PIC --
CREATE TABLE STORE_PIC
(
	BRANCHID VARCHAR(5) NOT NULL,
	ID INT NOT NULL CHECK (ID > 0 AND ID < 51),
	LINK VARCHAR(255) NOT NULL,
	FOREIGN KEY(BRANCHID, ID) REFERENCES ESTATE(BRANCHID, ID) ON DELETE CASCADE,
	PRIMARY KEY(BRANCHID, ID, LINK)
);

-- 26. ACTIVE_TIME -- 
CREATE TABLE TIME_ACTIVITY
(
	BRANCHID VARCHAR(5) NOT NULL,
	ID INT NOT NULL CHECK (ID > 0 AND ID < 51),
	START_TIME TIME NOT NULL,
	END_TIME TIME NOT NULL,
	FOREIGN KEY(BRANCHID, ID) REFERENCES ESTATE(BRANCHID, ID) ON DELETE CASCADE,
	PRIMARY KEY(BRANCHID, ID, START_TIME)
);

SELECT *
FROM SYSOBJECTS
WHERE xtype = 'U'
GO 